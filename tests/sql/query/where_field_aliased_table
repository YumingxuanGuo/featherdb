Query: SELECT m.id, g.id FROM movies m, genres g WHERE m.id >= 3 AND g.id = 1

Explain:
Projection: m.id, g.id
└─ NestedLoopJoin: inner
   ├─ Scan: movies as m (m.id > 3 OR m.id = 3)
   └─ KeyLookup: genres as g (1)

Result: ["id", "id"]
[Integer(3), Integer(1)]
[Integer(4), Integer(1)]
[Integer(5), Integer(1)]
[Integer(6), Integer(1)]
[Integer(7), Integer(1)]
[Integer(8), Integer(1)]
[Integer(9), Integer(1)]
[Integer(10), Integer(1)]

AST: Select {
    select: [
        (
            Field(
                Some(
                    "m",
                ),
                "id",
            ),
            None,
        ),
        (
            Field(
                Some(
                    "g",
                ),
                "id",
            ),
            None,
        ),
    ],
    from: [
        Table {
            name: "movies",
            alias: Some(
                "m",
            ),
        },
        Table {
            name: "genres",
            alias: Some(
                "g",
            ),
        },
    ],
    where: Some(
        Operation(
            And(
                Operation(
                    GreaterThanOrEqual(
                        Field(
                            Some(
                                "m",
                            ),
                            "id",
                        ),
                        Literal(
                            Integer(
                                3,
                            ),
                        ),
                    ),
                ),
                Operation(
                    Equal(
                        Field(
                            Some(
                                "g",
                            ),
                            "id",
                        ),
                        Literal(
                            Integer(
                                1,
                            ),
                        ),
                    ),
                ),
            ),
        ),
    ),
    group_by: [],
    having: None,
    order: [],
    offset: None,
    limit: None,
}

Plan: Plan(
    Projection {
        source: Filter {
            source: NestedLoopJoin {
                left: Scan {
                    table: "movies",
                    alias: Some(
                        "m",
                    ),
                    filter: None,
                },
                left_size: 7,
                right: Scan {
                    table: "genres",
                    alias: Some(
                        "g",
                    ),
                    filter: None,
                },
                predicate: None,
                outer: false,
            },
            predicate: And(
                Or(
                    GreaterThan(
                        Field(
                            0,
                            Some(
                                (
                                    Some(
                                        "m",
                                    ),
                                    "id",
                                ),
                            ),
                        ),
                        Constant(
                            Integer(
                                3,
                            ),
                        ),
                    ),
                    Equal(
                        Field(
                            0,
                            Some(
                                (
                                    Some(
                                        "m",
                                    ),
                                    "id",
                                ),
                            ),
                        ),
                        Constant(
                            Integer(
                                3,
                            ),
                        ),
                    ),
                ),
                Equal(
                    Field(
                        7,
                        Some(
                            (
                                Some(
                                    "g",
                                ),
                                "id",
                            ),
                        ),
                    ),
                    Constant(
                        Integer(
                            1,
                        ),
                    ),
                ),
            ),
        },
        expressions: [
            (
                Field(
                    0,
                    Some(
                        (
                            Some(
                                "m",
                            ),
                            "id",
                        ),
                    ),
                ),
                None,
            ),
            (
                Field(
                    7,
                    Some(
                        (
                            Some(
                                "g",
                            ),
                            "id",
                        ),
                    ),
                ),
                None,
            ),
        ],
    },
)

Optimized plan: Plan(
    Projection {
        source: NestedLoopJoin {
            left: Scan {
                table: "movies",
                alias: Some(
                    "m",
                ),
                filter: Some(
                    Or(
                        GreaterThan(
                            Field(
                                0,
                                Some(
                                    (
                                        Some(
                                            "m",
                                        ),
                                        "id",
                                    ),
                                ),
                            ),
                            Constant(
                                Integer(
                                    3,
                                ),
                            ),
                        ),
                        Equal(
                            Field(
                                0,
                                Some(
                                    (
                                        Some(
                                            "m",
                                        ),
                                        "id",
                                    ),
                                ),
                            ),
                            Constant(
                                Integer(
                                    3,
                                ),
                            ),
                        ),
                    ),
                ),
            },
            left_size: 7,
            right: KeyLookup {
                table: "genres",
                alias: Some(
                    "g",
                ),
                keys: [
                    Integer(
                        1,
                    ),
                ],
            },
            predicate: None,
            outer: false,
        },
        expressions: [
            (
                Field(
                    0,
                    Some(
                        (
                            Some(
                                "m",
                            ),
                            "id",
                        ),
                    ),
                ),
                None,
            ),
            (
                Field(
                    7,
                    Some(
                        (
                            Some(
                                "g",
                            ),
                            "id",
                        ),
                    ),
                ),
                None,
            ),
        ],
    },
)

